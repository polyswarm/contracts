image: docker:stable

test:
  stage: test
  before_script:
    - apk --no-cache add git wget nodejs npm python3 python build-base bash
    - npm install
  script:
    - set -e
    # - $(npm bin)/truffle compile
    - cd $(dirname `npm root`)
    - ln -s `pwd`/node_modules/zeppelin-solidity `pwd`
    - pip3 install --user slither-analyzer
    - wget https://github.com/ethereum/solidity/releases/download/v0.4.25/solc-static-linux
    - chmod +x ./solc-static-linux
    - $(python3 -m site --user-base)/bin/slither --solc ./solc-static-linux --exclude-informational contracts/

kick-e2e:
  tags:
    - docker
  stage: deploy
  services:
    - docker:dind
  before_script:
    - apk --no-cache add curl jq
  script:
    - set -e
  
    # kick e2e
    - >-
      E2E_PIPELINE_ID=`curl
      --silent
      --request POST
      --form "token=$CI_JOB_TOKEN"
      --form "variables[SOURCE_PROJECT]=$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
      --form "variables[SOURCE_BRANCH]=$CI_COMMIT_REF_NAME"
      --form ref=master
      "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/trigger/pipeline" | jq -r ".id"`
  
    # run unit tests
    - docker build -f docker/Dockerfile --cache-from polyswarm/contracts -t polyswarm/contracts .
    - docker run polyswarm/contracts
  
    # poll for e2e to finish
    - >-
      while [ -z $PIPELINE_STATUS ] || [ $PIPELINE_STATUS = "pending" ] || [ $PIPELINE_STATUS = "running" ]; do
        PIPELINE_STATUS=`curl \
          --silent \
          --header "PRIVATE-TOKEN: $CI_CUSTOM_CI_PAT" \
          "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/pipelines/$E2E_PIPELINE_ID" | jq -r ".status"`
        echo "waiting for e2e pipeline ...";
        sleep 5;
      done
  
    # check for success
    - >-
      if [ $PIPELINE_STATUS != "success" ]; then
        echo "failure further down the pipeline"
        exit 1
      fi
  
